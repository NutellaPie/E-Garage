@using Microsoft.AspNetCore.Identity
@using SSD_Assignment.Models
@using SSD_Assignment.Pages.Account
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<ApplicationRole> RoleManager

@{
    var user = await UserManager.GetUserAsync(User);
    //bool check = await RoleManager.RoleExistsAsync("Admin");
}

@if (SignInManager.IsSignedIn(User))
{
    <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (@*check == true &&*@ User.IsInRole("Admin") == true)
            {
                <li>
                    <a class="navbuttons" asp-page="/Audit/Index">Audit</a>
                </li>
                <li>
                    <a class="navbuttons" asp-page="/Roles/Manage">Roles</a>
                </li>

            }
            <li>
                <a class="navbuttons" asp-page="/Account/Manage/Index" title="Manage" style="padding: 5px 15px 5px 15px !important;">
                    @if (user.ProfilePic == null)
                    {
                        <img class="img-thumbnail img-circle" src="~/Uploads/ProfilePics/default.png" style="width: 50px; height: 50px;" />
                    }
                    else
                    {
                        <img class="img-thumbnail img-circle" src="~/Uploads/ProfilePics/@user.ProfilePic" style="width: 50%; height: 50%; max-height: 60px; max-width: 85px"/>
                    }

                    Hello @user.Name!
                </a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-link navlogout">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a class="navbuttons" asp-page="/Account/Register">Register</a></li>
        <li><a class="navbuttons" asp-page="/Account/Login">Log in</a></li>
    </ul>
}
